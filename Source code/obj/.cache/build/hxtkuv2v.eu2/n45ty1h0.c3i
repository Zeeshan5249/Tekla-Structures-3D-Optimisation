<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class CameraArm
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class CameraArm
   ">
    <meta name="generator" content="docfx 2.59.3.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="TeklaBillboardAid.CameraArm">
  
  
  <h1 id="TeklaBillboardAid_CameraArm" data-uid="TeklaBillboardAid.CameraArm" class="text-break">Class CameraArm
  </h1>
  <div class="markdown level0 summary"></div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">CameraArm</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="TeklaBillboardAid.html">TeklaBillboardAid</a></h6>
  <h6><strong>Assembly</strong>: BeamApplication.dll</h6>
  <h5 id="TeklaBillboardAid_CameraArm_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class CameraArm</code></pre>
  </div>
  <h3 id="constructors">Constructors
  </h3>
  
  
  <a id="TeklaBillboardAid_CameraArm__ctor_" data-uid="TeklaBillboardAid.CameraArm.#ctor*"></a>
  <h4 id="TeklaBillboardAid_CameraArm__ctor_System_String_System_String_TeklaBillboardAid_ModelParameters_" data-uid="TeklaBillboardAid.CameraArm.#ctor(System.String,System.String,TeklaBillboardAid.ModelParameters)">CameraArm(String, String, ModelParameters)</h4>
  <div class="markdown level1 summary"><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Constructor, which builds the camera arm with the relevant positioning and user inputs</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public CameraArm(string beamprofile, string plateProfile, ModelParameters modelParameters)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">beamprofile</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The profile for the beams in the arm</p>
</td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">plateProfile</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The profile of the plates in the arm</p>
</td>
      </tr>
      <tr>
        <td><a class="xref" href="TeklaBillboardAid.ModelParameters.html">ModelParameters</a></td>
        <td><span class="parametername">modelParameters</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="1" sourceendlinenumber="1">The parameters of the model</p>
</td>
      </tr>
    </tbody>
  </table>
  <h3 id="properties">Properties
  </h3>
  
  
  <a id="TeklaBillboardAid_CameraArm_Alpha_" data-uid="TeklaBillboardAid.CameraArm.Alpha*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_Alpha" data-uid="TeklaBillboardAid.CameraArm.Alpha">Alpha</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double Alpha { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Double representing an angle for geometric analysis </p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_beamDepth_" data-uid="TeklaBillboardAid.CameraArm.beamDepth*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_beamDepth" data-uid="TeklaBillboardAid.CameraArm.beamDepth">beamDepth</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double beamDepth { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Indicates the depth of the provided profile</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_beamThicccness_" data-uid="TeklaBillboardAid.CameraArm.beamThicccness*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_beamThicccness" data-uid="TeklaBillboardAid.CameraArm.beamThicccness">beamThicccness</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double beamThicccness { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Indicates the thickness of the provided profile</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_beamWidth_" data-uid="TeklaBillboardAid.CameraArm.beamWidth*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_beamWidth" data-uid="TeklaBillboardAid.CameraArm.beamWidth">beamWidth</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double beamWidth { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Indicates the width of the provided profile</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_Beta_" data-uid="TeklaBillboardAid.CameraArm.Beta*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_Beta" data-uid="TeklaBillboardAid.CameraArm.Beta">Beta</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double Beta { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Double representing an angle for geometrid analysis</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_height_" data-uid="TeklaBillboardAid.CameraArm.height*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_height" data-uid="TeklaBillboardAid.CameraArm.height">height</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double height { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Indicates the height of the model </p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_M_" data-uid="TeklaBillboardAid.CameraArm.M*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_M" data-uid="TeklaBillboardAid.CameraArm.M">M</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double M { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Used for additional supports </p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_Material_" data-uid="TeklaBillboardAid.CameraArm.Material*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_Material" data-uid="TeklaBillboardAid.CameraArm.Material">Material</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string Material { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">String indicating the profile of the plates on the arm</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_modelParameters_" data-uid="TeklaBillboardAid.CameraArm.modelParameters*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_modelParameters" data-uid="TeklaBillboardAid.CameraArm.modelParameters">modelParameters</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public ModelParameters modelParameters { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="TeklaBillboardAid.ModelParameters.html">ModelParameters</a></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Attribute to store the model&apos;s parameters</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_Mult_" data-uid="TeklaBillboardAid.CameraArm.Mult*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_Mult" data-uid="TeklaBillboardAid.CameraArm.Mult">Mult</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public int Mult { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Switches the Z coordinates if the camera is on the bottom of the billboard</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_N_" data-uid="TeklaBillboardAid.CameraArm.N*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_N" data-uid="TeklaBillboardAid.CameraArm.N">N</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double N { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Used for additional supports</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_PlateThickness_" data-uid="TeklaBillboardAid.CameraArm.PlateThickness*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_PlateThickness" data-uid="TeklaBillboardAid.CameraArm.PlateThickness">PlateThickness</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public double PlateThickness { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Double</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">Indicates the thickness of the provided plate profile</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="TeklaBillboardAid_CameraArm_Profile_" data-uid="TeklaBillboardAid.CameraArm.Profile*"></a>
  <h4 id="TeklaBillboardAid_CameraArm_Profile" data-uid="TeklaBillboardAid.CameraArm.Profile">Profile</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public string Profile { get; set; }</code></pre>
  </div>
  <h5 class="propertyValue">Property Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><p sourcefile="obj/api/TeklaBillboardAid.CameraArm.yml" sourcestartlinenumber="2" sourceendlinenumber="2">String indicating the profile of the arms</p>
</td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
