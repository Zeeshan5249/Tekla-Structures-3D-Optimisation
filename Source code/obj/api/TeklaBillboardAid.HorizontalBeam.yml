### YamlMime:ManagedReference
items:
- uid: TeklaBillboardAid.HorizontalBeam
  commentId: T:TeklaBillboardAid.HorizontalBeam
  id: HorizontalBeam
  parent: TeklaBillboardAid
  children:
  - TeklaBillboardAid.HorizontalBeam.CreateHole(Tekla.Structures.Model.Beam,Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point,System.Double,System.Double,TeklaBillboardAid.ModelParameters)
  - TeklaBillboardAid.HorizontalBeam.HorizontalBeams(System.Double,System.Double,System.Double,System.Double,Tekla.Structures.Geometry3d.Point,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Collections.Generic.List{System.Double},TeklaBillboardAid.ModelParameters)
  langs:
  - csharp
  - vb
  name: HorizontalBeam
  nameWithType: HorizontalBeam
  fullName: TeklaBillboardAid.HorizontalBeam
  type: Class
  source:
    remote:
      path: HorizontalBeam.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: HorizontalBeam
    path: HorizontalBeam.cs
    startLine: 10
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nA class to create th B1 horizontal beams in the model\n"
  example: []
  syntax:
    content: public class HorizontalBeam
    content.vb: Public Class HorizontalBeam
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TeklaBillboardAid.HorizontalBeam.HorizontalBeams(System.Double,System.Double,System.Double,System.Double,Tekla.Structures.Geometry3d.Point,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Collections.Generic.List{System.Double},TeklaBillboardAid.ModelParameters)
  commentId: M:TeklaBillboardAid.HorizontalBeam.HorizontalBeams(System.Double,System.Double,System.Double,System.Double,Tekla.Structures.Geometry3d.Point,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Collections.Generic.List{System.Double},TeklaBillboardAid.ModelParameters)
  id: HorizontalBeams(System.Double,System.Double,System.Double,System.Double,Tekla.Structures.Geometry3d.Point,System.Boolean,System.Boolean,System.Double,System.Double,System.Double,System.Collections.Generic.List{System.Double},TeklaBillboardAid.ModelParameters)
  parent: TeklaBillboardAid.HorizontalBeam
  langs:
  - csharp
  - vb
  name: HorizontalBeams(Double, Double, Double, Double, Point, Boolean, Boolean, Double, Double, Double, List<Double>, ModelParameters)
  nameWithType: HorizontalBeam.HorizontalBeams(Double, Double, Double, Double, Point, Boolean, Boolean, Double, Double, Double, List<Double>, ModelParameters)
  fullName: TeklaBillboardAid.HorizontalBeam.HorizontalBeams(System.Double, System.Double, System.Double, System.Double, Tekla.Structures.Geometry3d.Point, System.Boolean, System.Boolean, System.Double, System.Double, System.Double, System.Collections.Generic.List<System.Double>, TeklaBillboardAid.ModelParameters)
  type: Method
  source:
    remote:
      path: HorizontalBeam.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: HorizontalBeams
    path: HorizontalBeam.cs
    startLine: 28
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nThe constructor of the class to insert B1 horizontal beams in the model\n"
  example: []
  syntax:
    content: public static (Beam, Beam, Beam, Beam) HorizontalBeams(double xStart, double xEnd, double boxZStart, double boxZEnd, Point originOffset, bool side1, bool Side3, double B1SplitBeamWidth, double B1SplitBeamDepth, double billboardDepth, List<double> xSubCoordinates, ModelParameters modelParameters)
    parameters:
    - id: xStart
      type: System.Double
      description: A double indicating the start position of the beam
    - id: xEnd
      type: System.Double
      description: A double indicating the end position og the beam
    - id: boxZStart
      type: System.Double
      description: A double indicating the starting vertical position of the box frame
    - id: boxZEnd
      type: System.Double
      description: 'A double indicating the ending vertical position of the box frame '
    - id: originOffset
      type: Tekla.Structures.Geometry3d.Point
      description: A TSG point indicating the offset from the origin
    - id: side1
      type: System.Boolean
      description: A boolean indicating if this side has a split or not (true if it is a split)
    - id: Side3
      type: System.Boolean
      description: A boolean indicating if this side has a split or not (true if it is a split)
    - id: B1SplitBeamWidth
      type: System.Double
      description: A double indicating the width of the B1 beams
    - id: B1SplitBeamDepth
      type: System.Double
      description: A double indicating the depth of the B1 beams
    - id: billboardDepth
      type: System.Double
      description: A double indicating the billboard depth
    - id: xSubCoordinates
      type: System.Collections.Generic.List{System.Double}
      description: A list of doubles which is a subset of x coordinates which a list of LED cabinet widths
    - id: modelParameters
      type: TeklaBillboardAid.ModelParameters
      description: A class storing the parameters of the model
    return:
      type: System.ValueTuple{Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam}
      description: ''
    content.vb: Public Shared Function HorizontalBeams(xStart As Double, xEnd As Double, boxZStart As Double, boxZEnd As Double, originOffset As Point, side1 As Boolean, Side3 As Boolean, B1SplitBeamWidth As Double, B1SplitBeamDepth As Double, billboardDepth As Double, xSubCoordinates As List(Of Double), modelParameters As ModelParameters) As(Beam, Beam, Beam, Beam)(Of Beam , Beam, Beam, Beam)
  overload: TeklaBillboardAid.HorizontalBeam.HorizontalBeams*
  nameWithType.vb: HorizontalBeam.HorizontalBeams(Double, Double, Double, Double, Point, Boolean, Boolean, Double, Double, Double, List(Of Double), ModelParameters)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TeklaBillboardAid.HorizontalBeam.HorizontalBeams(System.Double, System.Double, System.Double, System.Double, Tekla.Structures.Geometry3d.Point, System.Boolean, System.Boolean, System.Double, System.Double, System.Double, System.Collections.Generic.List(Of System.Double), TeklaBillboardAid.ModelParameters)
  name.vb: HorizontalBeams(Double, Double, Double, Double, Point, Boolean, Boolean, Double, Double, Double, List(Of Double), ModelParameters)
- uid: TeklaBillboardAid.HorizontalBeam.CreateHole(Tekla.Structures.Model.Beam,Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point,System.Double,System.Double,TeklaBillboardAid.ModelParameters)
  commentId: M:TeklaBillboardAid.HorizontalBeam.CreateHole(Tekla.Structures.Model.Beam,Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point,System.Double,System.Double,TeklaBillboardAid.ModelParameters)
  id: CreateHole(Tekla.Structures.Model.Beam,Tekla.Structures.Geometry3d.Point,Tekla.Structures.Geometry3d.Point,System.Double,System.Double,TeklaBillboardAid.ModelParameters)
  parent: TeklaBillboardAid.HorizontalBeam
  langs:
  - csharp
  - vb
  name: CreateHole(Beam, Point, Point, Double, Double, ModelParameters)
  nameWithType: HorizontalBeam.CreateHole(Beam, Point, Point, Double, Double, ModelParameters)
  fullName: TeklaBillboardAid.HorizontalBeam.CreateHole(Tekla.Structures.Model.Beam, Tekla.Structures.Geometry3d.Point, Tekla.Structures.Geometry3d.Point, System.Double, System.Double, TeklaBillboardAid.ModelParameters)
  type: Method
  source:
    remote:
      path: HorizontalBeam.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: CreateHole
    path: HorizontalBeam.cs
    startLine: 260
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nA function to create a hole on a provided beam\n"
  example: []
  syntax:
    content: public static void CreateHole(Beam BeamToBeBolted, Point HoleFirstPosition, Point HoleSecondPosition, double HoleSize, double CutLength, ModelParameters modelParameters)
    parameters:
    - id: BeamToBeBolted
      type: Tekla.Structures.Model.Beam
      description: The beam to have a hole inserted
    - id: HoleFirstPosition
      type: Tekla.Structures.Geometry3d.Point
      description: The position of the hole as TSG point
    - id: HoleSecondPosition
      type: Tekla.Structures.Geometry3d.Point
      description: A reference point to indicate the perpendicular orientation of the hole
    - id: HoleSize
      type: System.Double
      description: A double indicating the diameter of the hole
    - id: CutLength
      type: System.Double
      description: A double indicating the length of the hole
    - id: modelParameters
      type: TeklaBillboardAid.ModelParameters
      description: A parameter indicating the parameters of the model
    content.vb: Public Shared Sub CreateHole(BeamToBeBolted As Beam, HoleFirstPosition As Point, HoleSecondPosition As Point, HoleSize As Double, CutLength As Double, modelParameters As ModelParameters)
  overload: TeklaBillboardAid.HorizontalBeam.CreateHole*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TeklaBillboardAid
  commentId: N:TeklaBillboardAid
  name: TeklaBillboardAid
  nameWithType: TeklaBillboardAid
  fullName: TeklaBillboardAid
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TeklaBillboardAid.HorizontalBeam.HorizontalBeams*
  commentId: Overload:TeklaBillboardAid.HorizontalBeam.HorizontalBeams
  name: HorizontalBeams
  nameWithType: HorizontalBeam.HorizontalBeams
  fullName: TeklaBillboardAid.HorizontalBeam.HorizontalBeams
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Tekla.Structures.Geometry3d.Point
  commentId: T:Tekla.Structures.Geometry3d.Point
  parent: Tekla.Structures.Geometry3d
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Tekla.Structures.Geometry3d.Point
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Generic.List{System.Double}
  commentId: T:System.Collections.Generic.List{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Double>
  nameWithType: List<Double>
  fullName: System.Collections.Generic.List<System.Double>
  nameWithType.vb: List(Of Double)
  fullName.vb: System.Collections.Generic.List(Of System.Double)
  name.vb: List(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: TeklaBillboardAid.ModelParameters
  commentId: T:TeklaBillboardAid.ModelParameters
  parent: TeklaBillboardAid
  name: ModelParameters
  nameWithType: ModelParameters
  fullName: TeklaBillboardAid.ModelParameters
- uid: System.ValueTuple{Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam}
  commentId: T:System.ValueTuple{Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam,Tekla.Structures.Model.Beam}
  parent: System
  definition: System.ValueTuple`4
  name: (T1, T2, T3, T4)<Beam, Beam, Beam, Beam>
  nameWithType: (T1, T2, T3, T4)<Beam, Beam, Beam, Beam>
  fullName: System.ValueTuple<Tekla.Structures.Model.Beam, Tekla.Structures.Model.Beam, Tekla.Structures.Model.Beam, Tekla.Structures.Model.Beam>
  nameWithType.vb: (T1, T2, T3, T4)(Of Beam, Beam, Beam, Beam)
  fullName.vb: System.ValueTuple(Of Tekla.Structures.Model.Beam, Tekla.Structures.Model.Beam, Tekla.Structures.Model.Beam, Tekla.Structures.Model.Beam)
  name.vb: (T1, T2, T3, T4)(Of Beam, Beam, Beam, Beam)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Tekla.Structures.Geometry3d
  commentId: N:Tekla.Structures.Geometry3d
  isExternal: true
  name: Tekla.Structures.Geometry3d
  nameWithType: Tekla.Structures.Geometry3d
  fullName: Tekla.Structures.Geometry3d
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  isExternal: true
  name: (T1, T2, T3, T4)<T1, T2, T3, T4>
  nameWithType: (T1, T2, T3, T4)<T1, T2, T3, T4>
  fullName: System.ValueTuple<T1, T2, T3, T4>
  nameWithType.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  fullName.vb: System.ValueTuple(Of T1, T2, T3, T4)
  name.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
- uid: TeklaBillboardAid.HorizontalBeam.CreateHole*
  commentId: Overload:TeklaBillboardAid.HorizontalBeam.CreateHole
  name: CreateHole
  nameWithType: HorizontalBeam.CreateHole
  fullName: TeklaBillboardAid.HorizontalBeam.CreateHole
- uid: Tekla.Structures.Model.Beam
  commentId: T:Tekla.Structures.Model.Beam
  parent: Tekla.Structures.Model
  isExternal: true
  name: Beam
  nameWithType: Beam
  fullName: Tekla.Structures.Model.Beam
- uid: Tekla.Structures.Model
  commentId: N:Tekla.Structures.Model
  isExternal: true
  name: Tekla.Structures.Model
  nameWithType: Tekla.Structures.Model
  fullName: Tekla.Structures.Model
