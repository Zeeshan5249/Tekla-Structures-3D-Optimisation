### YamlMime:ManagedReference
items:
- uid: TeklaBillboardAid.HorizontalRailing
  commentId: T:TeklaBillboardAid.HorizontalRailing
  id: HorizontalRailing
  parent: TeklaBillboardAid
  children:
  - TeklaBillboardAid.HorizontalRailing.HorizontalRailings(System.Collections.Generic.List{System.Double},System.Boolean,System.Boolean,Tekla.Structures.Geometry3d.Point,System.Boolean,TeklaBillboardAid.ModelParameters,System.Double,System.Double)
  - TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing
  - TeklaBillboardAid.HorizontalRailing.TopRightSideRailing
  langs:
  - csharp
  - vb
  name: HorizontalRailing
  nameWithType: HorizontalRailing
  fullName: TeklaBillboardAid.HorizontalRailing
  type: Class
  source:
    remote:
      path: HorizontalRailings.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: HorizontalRailing
    path: HorizontalRailings.cs
    startLine: 10
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nA Class which contains functions/methods for building the horizontal railings.\n"
  example: []
  syntax:
    content: public class HorizontalRailing
    content.vb: Public Class HorizontalRailing
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing
  commentId: P:TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing
  id: TopLeftSideRailing
  parent: TeklaBillboardAid.HorizontalRailing
  langs:
  - csharp
  - vb
  name: TopLeftSideRailing
  nameWithType: HorizontalRailing.TopLeftSideRailing
  fullName: TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing
  type: Property
  source:
    remote:
      path: HorizontalRailings.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: TopLeftSideRailing
    path: HorizontalRailings.cs
    startLine: 15
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  example: []
  syntax:
    content: public static Beam TopLeftSideRailing { get; set; }
    parameters: []
    return:
      type: Tekla.Structures.Model.Beam
      description: "\nThe top railing on the left side, which is used to booleancut the flashings\n"
    content.vb: Public Shared Property TopLeftSideRailing As Beam
  overload: TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: TeklaBillboardAid.HorizontalRailing.TopRightSideRailing
  commentId: P:TeklaBillboardAid.HorizontalRailing.TopRightSideRailing
  id: TopRightSideRailing
  parent: TeklaBillboardAid.HorizontalRailing
  langs:
  - csharp
  - vb
  name: TopRightSideRailing
  nameWithType: HorizontalRailing.TopRightSideRailing
  fullName: TeklaBillboardAid.HorizontalRailing.TopRightSideRailing
  type: Property
  source:
    remote:
      path: HorizontalRailings.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: TopRightSideRailing
    path: HorizontalRailings.cs
    startLine: 20
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  example: []
  syntax:
    content: public static Beam TopRightSideRailing { get; set; }
    parameters: []
    return:
      type: Tekla.Structures.Model.Beam
      description: "\nThe top railing on the right side, which is used to booleancut the flashings\n"
    content.vb: Public Shared Property TopRightSideRailing As Beam
  overload: TeklaBillboardAid.HorizontalRailing.TopRightSideRailing*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: TeklaBillboardAid.HorizontalRailing.HorizontalRailings(System.Collections.Generic.List{System.Double},System.Boolean,System.Boolean,Tekla.Structures.Geometry3d.Point,System.Boolean,TeklaBillboardAid.ModelParameters,System.Double,System.Double)
  commentId: M:TeklaBillboardAid.HorizontalRailing.HorizontalRailings(System.Collections.Generic.List{System.Double},System.Boolean,System.Boolean,Tekla.Structures.Geometry3d.Point,System.Boolean,TeklaBillboardAid.ModelParameters,System.Double,System.Double)
  id: HorizontalRailings(System.Collections.Generic.List{System.Double},System.Boolean,System.Boolean,Tekla.Structures.Geometry3d.Point,System.Boolean,TeklaBillboardAid.ModelParameters,System.Double,System.Double)
  parent: TeklaBillboardAid.HorizontalRailing
  langs:
  - csharp
  - vb
  name: HorizontalRailings(List<Double>, Boolean, Boolean, Point, Boolean, ModelParameters, Double, Double)
  nameWithType: HorizontalRailing.HorizontalRailings(List<Double>, Boolean, Boolean, Point, Boolean, ModelParameters, Double, Double)
  fullName: TeklaBillboardAid.HorizontalRailing.HorizontalRailings(System.Collections.Generic.List<System.Double>, System.Boolean, System.Boolean, Tekla.Structures.Geometry3d.Point, System.Boolean, TeklaBillboardAid.ModelParameters, System.Double, System.Double)
  type: Method
  source:
    remote:
      path: HorizontalRailings.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: HorizontalRailings
    path: HorizontalRailings.cs
    startLine: 35
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nConstructor to create horizontal railings.\n"
  example: []
  syntax:
    content: public static List<Beam> HorizontalRailings(List<double> xSubCoordinates, bool side2, bool side4, Point OriginOffset, bool AutoRadio, ModelParameters modelParameters, double railingsZStart, double railingsZEnd)
    parameters:
    - id: xSubCoordinates
      type: System.Collections.Generic.List{System.Double}
      description: ''
    - id: side2
      type: System.Boolean
      description: ''
    - id: side4
      type: System.Boolean
      description: ''
    - id: OriginOffset
      type: Tekla.Structures.Geometry3d.Point
      description: ''
    - id: AutoRadio
      type: System.Boolean
      description: ''
    - id: modelParameters
      type: TeklaBillboardAid.ModelParameters
      description: ''
    - id: railingsZStart
      type: System.Double
      description: ''
    - id: railingsZEnd
      type: System.Double
      description: ''
    return:
      type: System.Collections.Generic.List{Tekla.Structures.Model.Beam}
      description: 'List of Beam objects created '
    content.vb: Public Shared Function HorizontalRailings(xSubCoordinates As List(Of Double), side2 As Boolean, side4 As Boolean, OriginOffset As Point, AutoRadio As Boolean, modelParameters As ModelParameters, railingsZStart As Double, railingsZEnd As Double) As List(Of Beam)
  overload: TeklaBillboardAid.HorizontalRailing.HorizontalRailings*
  nameWithType.vb: HorizontalRailing.HorizontalRailings(List(Of Double), Boolean, Boolean, Point, Boolean, ModelParameters, Double, Double)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: TeklaBillboardAid.HorizontalRailing.HorizontalRailings(System.Collections.Generic.List(Of System.Double), System.Boolean, System.Boolean, Tekla.Structures.Geometry3d.Point, System.Boolean, TeklaBillboardAid.ModelParameters, System.Double, System.Double)
  name.vb: HorizontalRailings(List(Of Double), Boolean, Boolean, Point, Boolean, ModelParameters, Double, Double)
references:
- uid: TeklaBillboardAid
  commentId: N:TeklaBillboardAid
  name: TeklaBillboardAid
  nameWithType: TeklaBillboardAid
  fullName: TeklaBillboardAid
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing*
  commentId: Overload:TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing
  name: TopLeftSideRailing
  nameWithType: HorizontalRailing.TopLeftSideRailing
  fullName: TeklaBillboardAid.HorizontalRailing.TopLeftSideRailing
- uid: Tekla.Structures.Model.Beam
  commentId: T:Tekla.Structures.Model.Beam
  parent: Tekla.Structures.Model
  isExternal: true
  name: Beam
  nameWithType: Beam
  fullName: Tekla.Structures.Model.Beam
- uid: Tekla.Structures.Model
  commentId: N:Tekla.Structures.Model
  isExternal: true
  name: Tekla.Structures.Model
  nameWithType: Tekla.Structures.Model
  fullName: Tekla.Structures.Model
- uid: TeklaBillboardAid.HorizontalRailing.TopRightSideRailing*
  commentId: Overload:TeklaBillboardAid.HorizontalRailing.TopRightSideRailing
  name: TopRightSideRailing
  nameWithType: HorizontalRailing.TopRightSideRailing
  fullName: TeklaBillboardAid.HorizontalRailing.TopRightSideRailing
- uid: TeklaBillboardAid.HorizontalRailing.HorizontalRailings*
  commentId: Overload:TeklaBillboardAid.HorizontalRailing.HorizontalRailings
  name: HorizontalRailings
  nameWithType: HorizontalRailing.HorizontalRailings
  fullName: TeklaBillboardAid.HorizontalRailing.HorizontalRailings
- uid: System.Collections.Generic.List{System.Double}
  commentId: T:System.Collections.Generic.List{System.Double}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Double>
  nameWithType: List<Double>
  fullName: System.Collections.Generic.List<System.Double>
  nameWithType.vb: List(Of Double)
  fullName.vb: System.Collections.Generic.List(Of System.Double)
  name.vb: List(Of Double)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Tekla.Structures.Geometry3d.Point
  commentId: T:Tekla.Structures.Geometry3d.Point
  parent: Tekla.Structures.Geometry3d
  isExternal: true
  name: Point
  nameWithType: Point
  fullName: Tekla.Structures.Geometry3d.Point
- uid: TeklaBillboardAid.ModelParameters
  commentId: T:TeklaBillboardAid.ModelParameters
  parent: TeklaBillboardAid
  name: ModelParameters
  nameWithType: ModelParameters
  fullName: TeklaBillboardAid.ModelParameters
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Collections.Generic.List{Tekla.Structures.Model.Beam}
  commentId: T:System.Collections.Generic.List{Tekla.Structures.Model.Beam}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Beam>
  nameWithType: List<Beam>
  fullName: System.Collections.Generic.List<Tekla.Structures.Model.Beam>
  nameWithType.vb: List(Of Beam)
  fullName.vb: System.Collections.Generic.List(Of Tekla.Structures.Model.Beam)
  name.vb: List(Of Beam)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tekla.Structures.Model.Beam
    name: Beam
    nameWithType: Beam
    fullName: Tekla.Structures.Model.Beam
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Tekla.Structures.Geometry3d
  commentId: N:Tekla.Structures.Geometry3d
  isExternal: true
  name: Tekla.Structures.Geometry3d
  nameWithType: Tekla.Structures.Geometry3d
  fullName: Tekla.Structures.Geometry3d
