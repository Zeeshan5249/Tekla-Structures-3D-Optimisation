### YamlMime:ManagedReference
items:
- uid: TeklaBillboardAid.Curve_HorizontalBeam
  commentId: T:TeklaBillboardAid.Curve_HorizontalBeam
  id: Curve_HorizontalBeam
  parent: TeklaBillboardAid
  children:
  - TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams(TeklaBillboardAid.ModelParameters)
  langs:
  - csharp
  - vb
  name: Curve_HorizontalBeam
  nameWithType: Curve_HorizontalBeam
  fullName: TeklaBillboardAid.Curve_HorizontalBeam
  type: Class
  source:
    remote:
      path: Curve_HorizontalBeam.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: Curve_HorizontalBeam
    path: Curve_HorizontalBeam.cs
    startLine: 10
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nA class to create th B1 horizontal beams in the model\n"
  example: []
  syntax:
    content: public class Curve_HorizontalBeam
    content.vb: Public Class Curve_HorizontalBeam
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams(TeklaBillboardAid.ModelParameters)
  commentId: M:TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams(TeklaBillboardAid.ModelParameters)
  id: CurveHorizontalBeams(TeklaBillboardAid.ModelParameters)
  parent: TeklaBillboardAid.Curve_HorizontalBeam
  langs:
  - csharp
  - vb
  name: CurveHorizontalBeams(ModelParameters)
  nameWithType: Curve_HorizontalBeam.CurveHorizontalBeams(ModelParameters)
  fullName: TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams(TeklaBillboardAid.ModelParameters)
  type: Method
  source:
    remote:
      path: Curve_HorizontalBeam.cs
      branch: Zeeshan
      repo: https://github.com/Zeeshan100103/Tekla_3D.git
    id: CurveHorizontalBeams
    path: Curve_HorizontalBeam.cs
    startLine: 17
  assemblies:
  - BeamApplication
  namespace: TeklaBillboardAid
  summary: "\nThe constructor of the class to insert B1 horizontal curve beams in the model\n"
  example: []
  syntax:
    content: public static (PolyBeam, PolyBeam, PolyBeam, PolyBeam) CurveHorizontalBeams(ModelParameters modelParameters)
    parameters:
    - id: modelParameters
      type: TeklaBillboardAid.ModelParameters
      description: A class storing the parameters of the model
    return:
      type: System.ValueTuple{Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam}
      description: ''
    content.vb: Public Shared Function CurveHorizontalBeams(modelParameters As ModelParameters) As(PolyBeam, PolyBeam, PolyBeam, PolyBeam)(Of PolyBeam , PolyBeam, PolyBeam, PolyBeam)
  overload: TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: TeklaBillboardAid
  commentId: N:TeklaBillboardAid
  name: TeklaBillboardAid
  nameWithType: TeklaBillboardAid
  fullName: TeklaBillboardAid
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams*
  commentId: Overload:TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams
  name: CurveHorizontalBeams
  nameWithType: Curve_HorizontalBeam.CurveHorizontalBeams
  fullName: TeklaBillboardAid.Curve_HorizontalBeam.CurveHorizontalBeams
- uid: TeklaBillboardAid.ModelParameters
  commentId: T:TeklaBillboardAid.ModelParameters
  parent: TeklaBillboardAid
  name: ModelParameters
  nameWithType: ModelParameters
  fullName: TeklaBillboardAid.ModelParameters
- uid: System.ValueTuple{Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam}
  commentId: T:System.ValueTuple{Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam,Tekla.Structures.Model.PolyBeam}
  parent: System
  definition: System.ValueTuple`4
  name: (T1, T2, T3, T4)<PolyBeam, PolyBeam, PolyBeam, PolyBeam>
  nameWithType: (T1, T2, T3, T4)<PolyBeam, PolyBeam, PolyBeam, PolyBeam>
  fullName: System.ValueTuple<Tekla.Structures.Model.PolyBeam, Tekla.Structures.Model.PolyBeam, Tekla.Structures.Model.PolyBeam, Tekla.Structures.Model.PolyBeam>
  nameWithType.vb: (T1, T2, T3, T4)(Of PolyBeam, PolyBeam, PolyBeam, PolyBeam)
  fullName.vb: System.ValueTuple(Of Tekla.Structures.Model.PolyBeam, Tekla.Structures.Model.PolyBeam, Tekla.Structures.Model.PolyBeam, Tekla.Structures.Model.PolyBeam)
  name.vb: (T1, T2, T3, T4)(Of PolyBeam, PolyBeam, PolyBeam, PolyBeam)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Tekla.Structures.Model.PolyBeam
    name: PolyBeam
    nameWithType: PolyBeam
    fullName: Tekla.Structures.Model.PolyBeam
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ValueTuple`4
  commentId: T:System.ValueTuple`4
  isExternal: true
  name: (T1, T2, T3, T4)<T1, T2, T3, T4>
  nameWithType: (T1, T2, T3, T4)<T1, T2, T3, T4>
  fullName: System.ValueTuple<T1, T2, T3, T4>
  nameWithType.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  fullName.vb: System.ValueTuple(Of T1, T2, T3, T4)
  name.vb: (T1, T2, T3, T4)(Of T1, T2, T3, T4)
  spec.csharp:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.ValueTuple`4
    name: (T1, T2, T3, T4)
    nameWithType: (T1, T2, T3, T4)
    fullName: System.ValueTuple
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T1
    nameWithType: T1
    fullName: T1
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T2
    nameWithType: T2
    fullName: T2
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T3
    nameWithType: T3
    fullName: T3
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: T4
    nameWithType: T4
    fullName: T4
  - name: )
    nameWithType: )
    fullName: )
